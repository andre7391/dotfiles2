#!/bin/bash

  # wmctrl -r "Volume Control" -b add,demands_attention

########################################
# Function to print workspaces tags to be used in eww
#
# Arguments:
#   None
########################################
bspwm::print_workspaces() {
    
    occupied=($(bspc query -D -d .occupied --names))
    focused=($(bspc query -D -d .focused --names))
    urgent=($(bspc query -D -d .urgent --names))

    # merge occupied and focused removing duplicates
    workspaces=(${occupied[@]} ${focused[@]})
    workspaces=($(printf '%s\n' ${workspaces[@]} | sort -u))
    
    output=""

    for workspace in ${workspaces[@]} ; do

        if [[ ${focused[@]} =~ $workspace ]] ; then
            class="workspace focused"   
        elif [[ ${urgent[@]} =~ $workspace ]] ; then
            class="workspace urgent"
        else 
            class="workspace"
        fi

        if [[ $workspace == ${workspaces[0]} ]] && [[ $workspace == ${workspaces[-1]} ]] ; then
            class="$class round"
        elif [[ $workspace == ${workspaces[0]} ]] ; then
            class="$class round-left square-right"
        elif [[ $workspace == ${workspaces[-1]} ]] ; then
            class="$class square-left round-right"
        else 
            class="$class square"
        fi
    
        output="$output (eventbox :cursor \"hand\" :onclick \"bspc desktop -f $workspace\" (label :class \"$class\" :text \"$workspace\"))"
    done

    echo "(box :space-evenly false :class \"workspaces\" $output)"


    # # only print workspaces when it has changed
    # if [[ $last != $current ]] ; then 
        
    #     printf "%s" "$current" > /tmp/workspaces

    #     echo $current | sed -E 's/\},\s*\{/\},\n\{/g' | ( 
    #         while read workspace ; do
            
    #             name=$(echo $workspace | cut -d ':' -f 4 | cut -d ',' -f 1 | tr -d '"')
                
    #             if [[ "$workspace" = *"focused\":true"* ]]; then
    #                 class="workspace focused"   
    #             elif [[ "$workspace" = *"urgent\":true"* ]]; then
    #                 class="workspace urgent"
    #             else 
    #                 class="workspace"
    #             fi

    #             if [[ "$workspace" = *"["* ]] && [[ "$workspace" = *"]"* ]]; then
    #                 class="$class round"
    #             elif [[ "$workspace" = *"["* ]]; then
    #                 class="$class round-left square-right"
    #             elif [[ "$workspace" = *"]"* ]]; then
    #                 class="$class square-left round-right"
    #             else 
    #                 class="$class square"
    #             fi
    #             output="$output (eventbox :cursor \"hand\" :onclick \"i3-msg workspace $name\" (label :class \"$class\" :text \"$name\"))"
    #         done

    #         echo "(box :space-evenly false :class \"workspaces\" $output)"
    #     )
    # fi
}

########################################
# Print workspaces tags when something has changed
#
# Arguments:
#   None
########################################
bspwm::watch_workspaces() {

    # trap to kill all child process
    trap 'kill $(jobs -p)' EXIT

    # first print to avoid starting empty
    bspwm::print_workspaces

    # watch workspaces changes
    bspc subscribe desktop node_transfer | while read -r _ ; do
        bspwm::print_workspaces
    done &
    
    # check for changes every 5 seconds
    while true; do
        sleep 5
        bspwm::print_workspaces
    done
}

"$@"